#ifdef PNEUMATICS_TEST_MODE
	DoubleSolenoid* _piston_retract_extend = new DoubleSolenoid(PISTON_RETRACT_SOLENOID_A, PISTON_RETRACT_SOLENOID_B);
	DoubleSolenoid* _latch_lock_unlock = new DoubleSolenoid(LATCH_RETRACT_SOLENOID_A, LATCH_RETRACT_SOLENOID_B);
#endif
#ifdef ARM_TEST_MODE
	CANJaguar* armTest = new CANJaguar(7, CANJaguar::kPercentVbus);
	armTest->SetSafetyEnabled(false);
	armTest->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);  
	armTest->SetVoltageRampRate(0.0);
	armTest->ConfigFaultTime(0.1); 
	armTest->SetPositionReference(CANJaguar::kPosRef_QuadEncoder);
	armTest->ConfigEncoderCodesPerRev(250);
	armTest->EnableControl();
#endif


#ifdef ARM_TEST_MODE
		armTest->Set(stick4.GetY()*-0.5);
#endif
#ifdef PNEUMATICS_TEST_MODE
		DriverStation::GetInstance()->SetDigitalOut(1, _piston_retract_extend->Get());
		DriverStation::GetInstance()->SetDigitalOut(2, _latch_lock_unlock->Get());
#endif
#ifdef ARM_TEST_MODE
		DSLog(1, "Arm Pos: %f", armTest->GetPosition());
		DSLog(2, "Arm Volt: %f", armTest->GetOutputVoltage());
		DSLog(3, "Arm Curr %f", armTest->GetOutputCurrent());
#endif


#ifdef PNEUMATICS_TEST_MODE
		if (stick4.GetRawButton(4))
		{
			_piston_retract_extend->Set(_piston_retract_extend->kForward);
			lastSTog = GetTime();
		}
		if (stick4.GetRawButton(5))
		{
			_piston_retract_extend->Set(_piston_retract_extend->kReverse);
			lastSTog = GetTime();
		}
		if (stick4.GetRawButton(3))
		{
			_latch_lock_unlock->Set(_latch_lock_unlock->kForward);
			lastSTog = GetTime();
		}
		if (stick4.GetRawButton(2))
		{
			_latch_lock_unlock->Set(_latch_lock_unlock->kReverse); //reverse if pulled back
			lastSTog = GetTime();
		}
#endif


	if (GetTime() - lastSTog < 1.) //1. is the constant for min delay between shifts
		continue; 